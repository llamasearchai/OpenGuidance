version: '3.8'

services:
  openguidance:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: openguidance-dev
    environment:
      - OPENGUIDANCE_API_KEY=${OPENGUIDANCE_API_KEY}
      - OPENGUIDANCE_MODEL_NAME=${OPENGUIDANCE_MODEL_NAME:-gpt-4}
      - OPENGUIDANCE_LOG_LEVEL=${OPENGUIDANCE_LOG_LEVEL:-DEBUG}
      - OPENGUIDANCE_ENV=development
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:${POSTGRES_PASSWORD:-openguidance123}@postgres:5432/openguidance
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
      - openguidance-data:/app/data
      - openguidance-cache:/app/.cache
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - openguidance-network
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: openguidance-redis-dev
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - openguidance-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: openguidance-postgres-dev
    environment:
      - POSTGRES_DB=openguidance
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-openguidance123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - openguidance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d openguidance"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: openguidance-nginx-dev
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - openguidance
    restart: unless-stopped
    networks:
      - openguidance-network

  # Monitoring and observability services
  prometheus:
    image: prom/prometheus:latest
    container_name: openguidance-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - openguidance-network

  grafana:
    image: grafana/grafana:latest
    container_name: openguidance-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - openguidance-network

  # Testing services
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: openguidance-test
    environment:
      - OPENGUIDANCE_ENV=testing
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:${POSTGRES_PASSWORD:-openguidance123}@postgres:5432/openguidance_test
      - PYTHONPATH=/app/src
    volumes:
      - .:/app
      - test-reports:/app/test-reports
    depends_on:
      - redis
      - postgres
    networks:
      - openguidance-network
    profiles:
      - testing
    command: >
      sh -c "
        echo 'Waiting for services to be ready...' &&
        sleep 10 &&
        python -m pytest tests/ -v --cov=openguidance --cov-report=html:/app/test-reports/coverage --cov-report=xml:/app/test-reports/coverage.xml --junit-xml=/app/test-reports/junit.xml
      "

  # Documentation server
  docs:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: openguidance-docs
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    networks:
      - openguidance-network
    profiles:
      - docs
    command: >
      sh -c "
        cd /app &&
        pip install mkdocs mkdocs-material &&
        mkdocs serve --dev-addr=0.0.0.0:8080
      "

volumes:
  openguidance-data:
    driver: local
  openguidance-cache:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  test-reports:
    driver: local

networks:
  openguidance-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16